{"version":3,"sources":["components/AddTodo.jsx","components/Todo.jsx","components/Todos.jsx","App.jsx","index.js"],"names":["AddTodo","titleValue","descrValue","setTitleValue","setDescrValue","todos","addTodo","isError","handleKeyDown","deleteAllTodos","Card","Body","InputGroup","className","FormControl","placeholder","value","onChange","e","target","onKeyDown","as","Button","variant","length","onClick","size","Alert","Todo","todo","deleteTodo","ListGroup","Item","completed","role","date","title","descr","OverlayTrigger","placement","overlay","Tooltip","CloseButton","id","Todos","handleToggle","numbered","map","App","useState","setTodos","setIsError","arr","Date","now","convertDate","toLocaleString","timeZone","dateStyle","timeStyle","Container","Row","Col","lg","Header","Badge","bg","key","filter","ReactDOM","render","document","getElementById"],"mappings":"gQA6CeA,MA1Cf,YASK,IARDC,EAQA,EARAA,WACAC,EAOA,EAPAA,WACAC,EAMA,EANAA,cACAC,EAKA,EALAA,cACAC,EAIA,EAJAA,MAAMC,EAIN,EAJMA,QACNC,EAGA,EAHAA,QACAC,EAEA,EAFAA,cACAC,EACA,EADAA,eAGF,OACE,eAACC,EAAA,EAAKC,KAAN,WACE,cAACC,EAAA,EAAD,CAAYC,UAAU,OAAtB,SACE,cAACC,EAAA,EAAD,CACEC,YAAY,aACZ,aAAW,QACX,mBAAiB,aACjBC,MAAOf,EACPgB,SAAU,SAACC,GAAD,OAAOf,EAAce,EAAEC,OAAOH,QACxCI,UAAW,SAACF,GAAD,OAAOV,EAAcU,EAAGb,EAAOJ,EAAYC,QAG1D,cAACU,EAAA,EAAD,CAAYC,UAAU,OAAtB,SACE,cAACC,EAAA,EAAD,CACEC,YAAY,mBACZM,GAAG,WACH,aAAW,cACXL,MAAOd,EACPe,SAAU,SAACC,GAAD,OAAOd,EAAcc,EAAEC,OAAOH,QACxCI,UAAW,SAACF,GAAD,OAAOV,EAAcU,EAAGb,EAAOJ,EAAYC,QAGxD,sBAAKW,UAAU,oDAAf,UACI,cAACS,EAAA,EAAD,CAAQC,QAAQ,OAAOV,UAAWR,EAAMmB,OAAS,GAAK,WAAaC,QAAS,kBAAMhB,KAAlF,8BACA,cAACa,EAAA,EAAD,CAAQC,QAAQ,OAAOG,KAAM,KAAMD,QAAS,kBAAMnB,EAAQD,EAAOJ,EAAYC,IAA7E,oBAELK,GAAW,cAACoB,EAAA,EAAD,CAAOd,UAAU,mBAAmBU,QAAS,SAA7C,mC,gCCTHK,MA5Bf,YAAmC,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,WACjB,OAEI,eAACC,EAAA,EAAUC,KAAX,CACIX,GAAG,KACHR,UAAS,mEAA8DgB,EAAKI,UAAY,YAAc,IACtGC,KAAK,SAHT,UAKI,sBAAKrB,UAAU,eAAf,UACI,qBAAKA,UAAU,iBAAf,SAAiCgB,EAAKM,OACtC,qBAAKtB,UAAU,eAAf,SAA+BgB,EAAKO,QACpC,qBAAKvB,UAAU,OAAf,SAAuBgB,EAAKQ,WAEhC,cAACC,EAAA,EAAD,CACIC,UAAW,MACXC,QACA,cAACC,EAAA,EAAD,0BAHJ,SAQI,cAACC,EAAA,EAAD,CAAajB,QAAS,kBAAMK,EAAWD,EAAKc,aCG7CC,MAvBf,YAAmD,IAAnCvC,EAAkC,EAAlCA,MAAOyB,EAA2B,EAA3BA,WAAYe,EAAe,EAAfA,aAC/B,OACI,8BACI,cAACnC,EAAA,EAAD,CAAMG,UAAU,YAAhB,SACE,cAACH,EAAA,EAAKC,KAAN,UACE,cAACoB,EAAA,EAAD,CAAWV,GAAG,KAAKyB,UAAQ,EAA3B,SAEIzC,EAAMmB,OAASnB,EAAM0C,KAAI,SAAClB,GAAD,OACrB,cAAC,EAAD,CACIA,KAAMA,EAENC,WAAYA,EACZL,QAAS,SAACP,GAAD,OAAO2B,EAAa3B,EAAGW,EAAKc,MAFhCd,EAAKc,OAIZ,qBAAK9B,UAAU,cAAf,8CCgFXmC,MA3Ff,WAEE,MAAoCC,mBAAS,IAA7C,mBAAOhD,EAAP,KAAmBE,EAAnB,KACA,EAAoC8C,mBAAS,IAA7C,mBAAO/C,EAAP,KAAmBE,EAAnB,KACA,EAA0B6C,mBAAS,IAAnC,mBAAO5C,EAAP,KAAc6C,EAAd,KACA,EAA8BD,oBAAS,GAAvC,mBAAO1C,EAAP,KAAgB4C,EAAhB,KAEM7C,EAAU,SAAC8C,EAAKhB,EAAOC,GACvBD,GACFc,EAAS,GAAD,mBAAKE,GAAL,CAAU,CAChBT,GAAIU,KAAKC,MACTlB,MAAMA,EACNC,MAAOA,EACPF,KAAMoB,EAAY,IAAIF,MACtBpB,WAAW,MAEb9B,EAAc,IACdC,EAAc,IACd+C,GAAW,IAEXA,GAAW,IAiBTI,EAAc,SAACpB,GACnB,OAAOA,EAAKqB,eAAe,QAAS,CAClCC,SAAU,mBACVC,UAAW,QACXC,UAAW,WAgBf,OACE,qBAAK9C,UAAU,MAAf,SACE,cAAC+C,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKhD,UAAU,8BAAf,SACE,eAACiD,EAAA,EAAD,CAAKC,GAAI,EAAT,UACE,eAACrD,EAAA,EAAD,CAAMG,UAAU,kEAAhB,UACE,eAACH,EAAA,EAAKsD,OAAN,CAAanD,UAAU,oDAAvB,UACE,2CACA,cAACoD,EAAA,EAAD,CAAOC,GAAG,YAAV,SAAuB7D,EAAMmB,YAG/B,cAAC,EAAD,CACEvB,WAAYA,EACZC,WAAYA,EACZC,cAAeA,EACfC,cAAeA,EACfC,MAAOA,EACPC,QAASA,EACTC,QAASA,EACTC,cA/BQ,SAACU,EAAGb,EAAOJ,EAAYC,GAC7B,UAAVgB,EAAEiD,KACJ7D,EAAQD,EAAOJ,EAAYC,IA8BjBO,eA1BS,WACjBJ,EAAMmB,QACR0B,EAAS,UA6BH,cAAC,EAAD,CAAO7C,MAAOA,EAAOyB,WA1DZ,SAACa,GAClBO,EAAS,YAAI7C,EAAM+D,QAAO,SAACvC,GAAD,OAAUA,EAAKc,KAAOA,QAyDKE,aAtDlC,SAAC3B,EAAGyB,iBC/B3B0B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.385145f6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, FormControl, InputGroup, Button, Alert } from \"react-bootstrap\";\r\n\r\nfunction AddTodo({\r\n    titleValue,\r\n    descrValue,\r\n    setTitleValue,\r\n    setDescrValue,\r\n    todos,addTodo,\r\n    isError,\r\n    handleKeyDown,\r\n    deleteAllTodos}) \r\n    {\r\n\r\n  return (\r\n    <Card.Body>\r\n      <InputGroup className=\"mb-2\">\r\n        <FormControl\r\n          placeholder=\"Todo title\"\r\n          aria-label=\"Title\"\r\n          aria-describedby=\"Todo title\"\r\n          value={titleValue}\r\n          onChange={(e) => setTitleValue(e.target.value)}\r\n          onKeyDown={(e) => handleKeyDown(e, todos, titleValue, descrValue)}\r\n        />\r\n      </InputGroup>\r\n      <InputGroup className=\"mb-3\">\r\n        <FormControl\r\n          placeholder=\"Todo description\"\r\n          as=\"textarea\"\r\n          aria-label=\"Description\"\r\n          value={descrValue}\r\n          onChange={(e) => setDescrValue(e.target.value)}\r\n          onKeyDown={(e) => handleKeyDown(e, todos, titleValue, descrValue)}\r\n        />\r\n      </InputGroup>\r\n        <div className=\"d-flex justify-content-between align-items-center\">\r\n            <Button variant=\"link\" className={todos.length ? '' : 'disabled'}  onClick={() => deleteAllTodos()}>delete all tasks</Button>\r\n            <Button variant=\"dark\" size={'md'} onClick={() => addTodo(todos, titleValue, descrValue)}>Add</Button>\r\n        </div>\r\n      {isError && <Alert className=\"mt-3 text-center\" variant={'danger'}>Title is required</Alert>}\r\n    </Card.Body>\r\n  );\r\n}\r\n\r\nexport default AddTodo;\r\n","import React from 'react'\r\nimport { CloseButton, ListGroup, OverlayTrigger, Tooltip } from 'react-bootstrap'\r\n\r\nfunction Todo({todo, deleteTodo}) {\r\n    return (\r\n\r\n        <ListGroup.Item\r\n            as=\"li\"\r\n            className={`d-flex justify-content-between align-items-start overlay ${todo.completed ? 'completed' : ''}`}\r\n            role=\"button\"\r\n        >\r\n            <div className=\"ms-2 me-auto\">\r\n                <div className=\"font-monospace\">{todo.date}</div>\r\n                <div className=\"fw-bold fs-3\">{todo.title}</div>\r\n                <div className=\"fs-5\">{todo.descr}</div>\r\n            </div>\r\n            <OverlayTrigger\r\n                placement={'top'}\r\n                overlay={\r\n                <Tooltip>\r\n                    delete task\r\n                </Tooltip>\r\n                }\r\n            >\r\n                <CloseButton onClick={() => deleteTodo(todo.id)}/>\r\n            </OverlayTrigger>\r\n        </ListGroup.Item>\r\n        \r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react'\r\nimport { Card, ListGroup } from 'react-bootstrap'\r\nimport Todo from './Todo'\r\n\r\nfunction Todos({todos, deleteTodo, handleToggle}) {\r\n    return (\r\n        <div>\r\n            <Card className=\"shadow-sm\">\r\n              <Card.Body>\r\n                <ListGroup as=\"ol\" numbered>\r\n                {\r\n                    todos.length ? todos.map((todo) => (\r\n                        <Todo \r\n                            todo={todo} \r\n                            key={todo.id} \r\n                            deleteTodo={deleteTodo}             \r\n                            onClick={(e) => handleToggle(e, todo.id)}\r\n                        />\r\n                    )) : (<div className=\"text-center\">There are no tasks here</div>)\r\n                }\r\n                </ListGroup>\r\n              </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todos\r\n","import React, { useState } from \"react\";\nimport { Card, Col, Container, Row, Badge } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\nimport AddTodo from './components/AddTodo';\nimport Todos from './components/Todos';\n\nfunction App() {\n\n  const [titleValue, setTitleValue] = useState(\"\");\n  const [descrValue, setDescrValue] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [isError, setIsError] = useState(false)\n\n  const addTodo = (arr, title, descr) => {\n    if (title) {\n      setTodos([...arr, {\n        id: Date.now(), \n        title:title, \n        descr: descr, \n        date: convertDate(new Date()),\n        completed: false,\n      }])\n      setTitleValue('')\n      setDescrValue('')\n      setIsError(false)\n    } else {\n      setIsError(true)\n    }\n  }\n\n  const deleteTodo = (id) => {\n    setTodos([...todos.filter((todo) => todo.id !== id)])\n  }\n\n  const handleToggle = (e, id) => {\n    // e.stopImmediatePropagation();\n    // setTodos([\n    //   ...todos.map((todo) => \n    //     todo.id === id ? {...todo, completed: !todo.completed} : {...todo}\n    //   )\n    // ])\n  }\n\n  const convertDate = (date) => {\n    return date.toLocaleString(\"en-US\", {\n      timeZone: \"America/New_York\", \n      dateStyle: \"short\", \n      timeStyle: \"short\"}\n      )\n  }\n\n  const handleKeyDown = (e, todos, titleValue, descrValue) => {\n    if (e.key === 'Enter') {\n      addTodo(todos, titleValue, descrValue)\n    }\n  }\n\n  const deleteAllTodos = () => {\n    if (todos.length) {\n      setTodos([])\n    }\n  }\n\n  return (\n    <div className=\"app\">\n      <Container>\n        <Row className=\"justify-content-center pt-5\">\n          <Col lg={6}>\n            <Card className=\"control-card mb-3 shadow-sm position-sticky top-0 zindex-sticky\">\n              <Card.Header className=\"d-flex align-items-center justify-content-between\">\n                <h3>Todo List</h3>\n                <Badge bg=\"secondary\">{todos.length}</Badge>\n              </Card.Header>\n\n              <AddTodo \n                titleValue={titleValue}\n                descrValue={descrValue}\n                setTitleValue={setTitleValue}\n                setDescrValue={setDescrValue}\n                todos={todos}\n                addTodo={addTodo}\n                isError={isError}\n                handleKeyDown={handleKeyDown}\n                deleteAllTodos={deleteAllTodos}\n              />\n\n            </Card>\n\n            <Todos todos={todos} deleteTodo={deleteTodo} handleToggle={handleToggle} />\n\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}